#!/bin/sh

# Starts a server using OAuth authentication
function server_oauth {
    node bin/server-app/oauth-app &
}

# Starts a server using normal authentication
function server_normalauth {
    node bin/server-app/normalauth-app --seed bin/apps/seed.json &
}

# Starts a dashboard
function dashboard {
    server_normalauth
    node bin/apps/dashboard/service/app.js &
    python bin/apps/dashboard/service/app.py &

    pushd bin/apps/dashboard/static
    python -m SimpleHTTPServer &
    popd
}

# Starts the unit tests
function test {
    server_normalauth
    node bin/apps/test/service/app.js &
    
    pushd bin/apps/test/static
    python -m SimpleHTTPServer &
    popd
}

# Starts the mice app
function mice {
    server_normalauth
    node bin/apps/mice/service/app.js &
    
    pushd bin/apps/mice/static
    python -m SimpleHTTPServer &
    popd
}

# Starts the OAuth twitter app
function oauth_twitter {
    server_oauth
    node bin/apps/oauth-twitter/service/app.js &
    
    pushd bin/apps/oauth-twitter/static
    python -m SimpleHTTPServer &
    popd
}

# Starts the OAuth dotCloud app
function oauth_dotcloud {
    server_oauth
    node bin/apps/oauth-dotcloud/service/app.js &
    
    pushd bin/apps/oauth-dotcloud/static
    python -m SimpleHTTPServer &
    popd
}

# Starts the stress tester
function stress {
    server_normalauth
    node bin/apps/stress/service/app.js &
    
    pushd bin/apps/stress/static
    python -m SimpleHTTPServer &
    popd
}

# Starts RETALIATOR
function retaliator {
    server_normalauth
    python bin/apps/retaliator/service/app.py &
    
    pushd bin/apps/retaliator/static
    python -m SimpleHTTPServer &
    popd
}

#Called when the user control+c's, to close background processes
function control_c {
    kill `jobs -p`
    exit $?
}

for i in $@
do
    $i
done

trap control_c SIGINT
while true; do read x; done
